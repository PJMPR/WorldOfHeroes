package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import dao.mappers.IMapResultSetIntoEntity;
import dao.repositories.IGuildRepository;
import dao.uow.IUnitOfWork;
import domain.model.Guild;

public class GuildRepository extends RepositoryBase<Guild> implements IGuildRepository {

    private PreparedStatement getFaction;

	
	public GuildRepository(Connection connection, IMapResultSetIntoEntity<Guild> mapper, IUnitOfWork uow) {
		super(connection,mapper,uow);
		try {
            getFaction = connection.prepareStatement(getFactionSql());
        } catch (SQLException e) {
            e.printStackTrace();
        }
	}

	private String getFactionSql() {
		return "SELECT * FROM guild WHERE faction=?";
	}

	@Override
	protected String createTableSql() {
		return "" + "CREATE TABLE guild("
				+ "id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,"
				+ "name varchar(20)," + "faction varchar(10)" + ")";
	}

	@Override
	protected String tableName() {
		return "guild";
	}
	
	@Override
	protected String insertSql() {
		return "INSERT INTO guild(name, faction) VALUES (?,?)";
	}

	@Override
	protected String updateSql() {
		return "UPDATE guild SET (name, faction)=(?,?) WHERE id=?";
	}

	@Override
	protected void setInsert(Guild entity) throws SQLException {
		insert.setString(1, entity.getName());
		insert.setString(2, entity.getFaction().toString());
	}
	
	@Override
	protected void setUpdate(Guild entity) throws SQLException {
		update.setString(1, entity.getName());
		update.setString(2, entity.getFaction().toString());
	}

	public List<Guild> withFaction(String faction) {
        List<Guild> guilds = new ArrayList<Guild>();
        try{
            getFaction.setString(1, faction);
            ResultSet resultSet = getFaction.executeQuery();
            while(resultSet.next()){
            	guilds.add(mapper.map(resultSet));
            }
        }catch (SQLException e){
            e.printStackTrace();
        }
        return guilds;
	}

}